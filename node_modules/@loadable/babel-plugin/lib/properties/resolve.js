"use strict";

exports.__esModule = true;
exports.default = resolveProperty;

var _util = require("../util");

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n    if (require.resolveWeak) {\n      return require.resolveWeak(ID)\n    }\n\n    return require('path').resolve(__dirname, ID)\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteralLoose(strings, raw) { if (!raw) { raw = strings.slice(0); } strings.raw = raw; return strings; }

function resolveProperty(_ref) {
  var t = _ref.types,
      template = _ref.template;
  var buildStatements = template(_templateObject());

  function getCallValue(callPath) {
    var importArg = (0, _util.getImportArg)(callPath);

    if (importArg.isTemplateLiteral()) {
      return t.templateLiteral(importArg.node.quasis, importArg.node.expressions);
    }

    return t.stringLiteral(importArg.node.value);
  }

  return function (_ref2) {
    var callPath = _ref2.callPath,
        funcPath = _ref2.funcPath;
    return t.objectMethod('method', t.identifier('resolve'), funcPath.node.params, t.blockStatement(buildStatements({
      ID: getCallValue(callPath)
    })));
  };
}